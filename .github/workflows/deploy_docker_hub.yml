name: Docker Hub Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "DEBUG=true" > .env
          echo "NODE_ENV=development" >> .env
          echo "JWT_SECRET=secret" >> .env
          echo "JWT_EXPIRE=604800" >> .env
          echo "WEB_PORT=3000" >> .env
          echo "WEBSOCKET_PORT=3001" >> .env
          echo "ROOM_UPLOAD_SIZE=5242880" >> .env
          echo "ROOM_TOTAL_UPLOAD_SIZE=52428800" >> .env
          echo "ROOM_JOIN_MESSAGE={name} joined the room!" >> .env
          echo "ROOM_RULES_TEXT=No spamming!" >> .env
          echo "ROOM_MAX_CHANNELS=5" >> .env
          echo "S3_REGION=local" >> .env
          echo "S3_ENDPOINT_PROTOCOL=http://" >> .env
          echo "S3_ENDPOINT_URL=localhost" >> .env
          echo "S3_ACCESS_KEY_ID=id" >> .env
          echo "S3_SECRET_ACCESS_KEY=key" >> .env
          echo "S3_BUCKET_NAME=bucket" >> .env
          echo "S3_CDN_URL=http://localhost" >> .env
          echo "SEQUELIZE_DEV_DATABASE_URL=mysql://chat_user:password@mysql/chat" >> .env
          echo "SEQUELIZE_TEST_DATABASE_URL=sqlite::memory:" >> .env
          echo "SEQUELIZE_PROD_DATABASE_URL=mysql://chat_user:password@mysql/chat" >> .env
          echo "SEQUELIZE_ADMIN_DEV_DATABASE_URL=mysql://chat_admin:password@mysql/chat" >> .env
          echo "SEQUELIZE_ADMIN_TEST_DATABASE_URL=sqlite::memory:" >> .env
          echo "SEQUELIZE_ADMIN_PROD_DATABASE_URL=mysql://chat_admin:password@mysql/chat" >> .env
          echo "MYSQL_BACKUP_LOCATION=/var/backups/mysql" >> .env
          echo "ROLLBAR_ACCESS_TOKEN=secret" >> .env
          echo "ROOT_MYSQL_DATABASE=chat" >> .env
          echo "ROOT_MYSQL_USER=root" >> .env
          echo "ROOT_MYSQL_PASSWORD=password" >> .env
          echo "ROOT_MYSQL_HOST=mysql" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-app-backend:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/chat-app-backend:latest ${{ secrets.DOCKER_USERNAME }}/chat-app-backend:${{ github.sha }}

      - name: Push image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/chat-app-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/chat-app-backend:${{ github.sha }}
